{
  "version": 3,
  "sources": ["../../@slangeder/rubberband-wasm/dist/index.esm.js"],
  "sourcesContent": ["/*!\n * rubberband-wasm v2.0.1 (https://www.npmjs.com/package/rubberband-wasm)\n * (c) Dani Biro\n * @license GPLv2\n */\n\nvar RubberBandOption;\n(function (RubberBandOption) {\n    RubberBandOption[RubberBandOption[\"RubberBandOptionProcessOffline\"] = 0] = \"RubberBandOptionProcessOffline\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionProcessRealTime\"] = 1] = \"RubberBandOptionProcessRealTime\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionStretchElastic\"] = 0] = \"RubberBandOptionStretchElastic\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionStretchPrecise\"] = 16] = \"RubberBandOptionStretchPrecise\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionTransientsCrisp\"] = 0] = \"RubberBandOptionTransientsCrisp\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionTransientsMixed\"] = 256] = \"RubberBandOptionTransientsMixed\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionTransientsSmooth\"] = 512] = \"RubberBandOptionTransientsSmooth\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionDetectorCompound\"] = 0] = \"RubberBandOptionDetectorCompound\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionDetectorPercussive\"] = 1024] = \"RubberBandOptionDetectorPercussive\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionDetectorSoft\"] = 2048] = \"RubberBandOptionDetectorSoft\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionPhaseLaminar\"] = 0] = \"RubberBandOptionPhaseLaminar\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionPhaseIndependent\"] = 8192] = \"RubberBandOptionPhaseIndependent\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionThreadingAuto\"] = 0] = \"RubberBandOptionThreadingAuto\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionThreadingNever\"] = 65536] = \"RubberBandOptionThreadingNever\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionThreadingAlways\"] = 131072] = \"RubberBandOptionThreadingAlways\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionWindowStandard\"] = 0] = \"RubberBandOptionWindowStandard\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionWindowShort\"] = 1048576] = \"RubberBandOptionWindowShort\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionWindowLong\"] = 2097152] = \"RubberBandOptionWindowLong\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionSmoothingOff\"] = 0] = \"RubberBandOptionSmoothingOff\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionSmoothingOn\"] = 8388608] = \"RubberBandOptionSmoothingOn\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionFormantShifted\"] = 0] = \"RubberBandOptionFormantShifted\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionFormantPreserved\"] = 16777216] = \"RubberBandOptionFormantPreserved\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionPitchHighSpeed\"] = 0] = \"RubberBandOptionPitchHighSpeed\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionPitchHighQuality\"] = 33554432] = \"RubberBandOptionPitchHighQuality\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionPitchHighConsistency\"] = 67108864] = \"RubberBandOptionPitchHighConsistency\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionChannelsApart\"] = 0] = \"RubberBandOptionChannelsApart\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionChannelsTogether\"] = 268435456] = \"RubberBandOptionChannelsTogether\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionEngineFaster\"] = 0] = \"RubberBandOptionEngineFaster\";\n    RubberBandOption[RubberBandOption[\"RubberBandOptionEngineFiner\"] = 536870912] = \"RubberBandOptionEngineFiner\";\n})(RubberBandOption || (RubberBandOption = {}));\nvar RubberBandPresetOption;\n(function (RubberBandPresetOption) {\n    RubberBandPresetOption[RubberBandPresetOption[\"DefaultOptions\"] = 0] = \"DefaultOptions\";\n    RubberBandPresetOption[RubberBandPresetOption[\"PercussiveOptions\"] = 1056768] = \"PercussiveOptions\";\n})(RubberBandPresetOption || (RubberBandPresetOption = {}));\nclass RubberBandInterface {\n    constructor() { }\n    static async initialize(module) {\n        if (typeof WebAssembly === \"undefined\") {\n            throw new Error(\"WebAssembly is not supported in this environment!\");\n        }\n        let heap = {};\n        const errorHandler = (...params) => {\n            console.error(\"WASI called with params\", params);\n            return 52;\n        };\n        let printBuffer = [];\n        const wasmInstance = await WebAssembly.instantiate(module, {\n            env: {\n                emscripten_notify_memory_growth: () => {\n                    heap.HEAP8 = new Uint8Array(wasmInstance.exports.memory.buffer);\n                    heap.HEAP32 = new Uint32Array(wasmInstance.exports.memory.buffer);\n                },\n            },\n            wasi_snapshot_preview1: {\n                proc_exit: (...params) => errorHandler(\"proc_exit\", params),\n                fd_read: (...params) => errorHandler(\"fd_read\", params),\n                fd_write: (fd, iov, iovcnt, pnum) => {\n                    if (fd > 2)\n                        return 52;\n                    let num = 0;\n                    for (let i = 0; i < iovcnt; i++) {\n                        const ptr = heap.HEAP32[iov >> 2];\n                        const len = heap.HEAP32[(iov + 4) >> 2];\n                        iov += 8;\n                        for (let j = 0; j < len; j++) {\n                            const curr = heap.HEAP8[ptr + j];\n                            if (curr === 0 || curr === 10) {\n                                console.log(printBuffer.join(\"\"));\n                                printBuffer.length = 0;\n                            }\n                            else {\n                                printBuffer.push(String.fromCharCode(curr));\n                            }\n                        }\n                        num += len;\n                    }\n                    heap.HEAP32[pnum >> 2] = num;\n                    return 0;\n                },\n                fd_seek: (...params) => errorHandler(\"fd_seek\", params),\n                fd_close: (...params) => errorHandler(\"fd_close\", params),\n                environ_sizes_get: (penviron_count, penviron_buf_size) => {\n                    // heap.HEAP32[penviron_count >> 2] = 0;\n                    // heap.HEAP32[penviron_buf_size >> 2] = 0;\n                    return 52; // NO_SYS\n                },\n                environ_get: (...params) => errorHandler(\"environ_get\", params),\n                clock_time_get: (...params) => errorHandler(\"clock_time_get\", params),\n            },\n        });\n        const exports = wasmInstance.exports;\n        heap.HEAP8 = new Uint8Array(wasmInstance.exports.memory.buffer);\n        heap.HEAP32 = new Uint32Array(wasmInstance.exports.memory.buffer);\n        exports._initialize();\n        const instance = { heap, exports };\n        const ret = new RubberBandInterface();\n        ret.wasm = instance;\n        return ret;\n    }\n    malloc(size) {\n        return this.wasm.exports.wasm_malloc(size);\n    }\n    memWrite(destPtr, data) {\n        const uint8Array = data instanceof Uint8Array ? data : new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        this.wasm.heap.HEAP8.set(uint8Array, destPtr);\n    }\n    memWritePtr(destPtr, srcPtr) {\n        const buf = new Uint8Array(4);\n        const view = new DataView(buf.buffer);\n        view.setUint32(0, srcPtr, true);\n        this.wasm.heap.HEAP8.set(buf, destPtr);\n    }\n    memReadU8(srcPtr, length) {\n        return this.wasm.heap.HEAP8.subarray(srcPtr, srcPtr + length);\n    }\n    memReadF32(srcPtr, length) {\n        const res = this.memReadU8(srcPtr, length * 4);\n        return new Float32Array(res.buffer, res.byteOffset, length);\n    }\n    free(ptr) {\n        this.wasm.exports.wasm_free(ptr);\n    }\n    rubberband_new(sampleRate, channels, options, initialTimeRatio, initialPitchScale) {\n        return this.wasm.exports.rb_new(sampleRate, channels, options, initialTimeRatio, initialPitchScale);\n    }\n    rubberband_delete(state) {\n        this.wasm.exports.rb_delete(state);\n    }\n    rubberband_reset(state) {\n        this.wasm.exports.rb_reset(state);\n    }\n    rubberband_set_time_ratio(state, ratio) {\n        this.wasm.exports.rb_set_time_ratio(state, ratio);\n    }\n    rubberband_set_pitch_scale(state, scale) {\n        this.wasm.exports.rb_set_pitch_scale(state, scale);\n    }\n    rubberband_set_formant_scale(state, scale) {\n        this.wasm.exports.rb_set_formant_scale(state, scale);\n    }\n    rubberband_get_time_ratio(state) {\n        return this.wasm.exports.rb_get_time_ratio(state);\n    }\n    rubberband_get_pitch_scale(state) {\n        return this.wasm.exports.rb_get_pitch_scale(state);\n    }\n    rubberband_get_formant_scale(state) {\n        return this.wasm.exports.rb_get_formant_scale(state);\n    }\n    rubberband_get_preferred_start_pad(state) {\n        return this.wasm.exports.rb_get_preferred_start_pad(state);\n    }\n    rubberband_get_start_delay(state) {\n        return this.wasm.exports.rb_get_start_delay(state);\n    }\n    rubberband_get_latency(state) {\n        return this.wasm.exports.rb_get_latency(state);\n    }\n    rubberband_set_transients_option(state, options) {\n        this.wasm.exports.rb_set_transients_option(state, options);\n    }\n    rubberband_set_detector_option(state, options) {\n        this.wasm.exports.rb_set_detector_option(state, options);\n    }\n    rubberband_set_phase_option(state, options) {\n        this.wasm.exports.rb_set_phase_option(state, options);\n    }\n    rubberband_set_formant_option(state, options) {\n        this.wasm.exports.rb_set_formant_option(state, options);\n    }\n    rubberband_set_pitch_option(state, options) {\n        this.wasm.exports.rb_set_pitch_option(state, options);\n    }\n    rubberband_set_expected_input_duration(state, samples) {\n        this.wasm.exports.rb_set_expected_input_duration(state, samples);\n    }\n    rubberband_get_samples_required(state) {\n        return this.wasm.exports.rb_get_samples_required(state);\n    }\n    rubberband_set_max_process_size(state, samples) {\n        this.wasm.exports.rb_set_max_process_size(state, samples);\n    }\n    rubberband_get_process_size_limit(state) {\n        return this.wasm.exports.rb_get_process_size_limit(state);\n    }\n    rubberband_set_key_frame_map(state, keyframecount, from, to) {\n        this.wasm.exports.rb_set_key_frame_map(state, keyframecount, from, to);\n    }\n    rubberband_study(state, input, samples, final) {\n        this.wasm.exports.rb_study(state, input, samples, final);\n    }\n    rubberband_process(state, input, samples, final) {\n        this.wasm.exports.rb_process(state, input, samples, final);\n    }\n    rubberband_available(state) {\n        return this.wasm.exports.rb_available(state);\n    }\n    rubberband_retrieve(state, output, samples) {\n        return this.wasm.exports.rb_retrieve(state, output, samples);\n    }\n    rubberband_get_channel_count(state) {\n        return this.wasm.exports.rb_get_channel_count(state);\n    }\n    rubberband_calculate_stretch(state) {\n        this.wasm.exports.rb_calculate_stretch(state);\n    }\n    rubberband_set_debug_level(state, level) {\n        this.wasm.exports.rb_set_debug_level(state, level);\n    }\n    rubberband_set_default_debug_level(level) {\n        this.wasm.exports.rb_set_default_debug_level(level);\n    }\n}\n\nexport { RubberBandInterface, RubberBandOption, RubberBandPresetOption };\n"],
  "mappings": "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",
  "names": ["RubberBandOption", "RubberBandPresetOption"]
}
